// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.6.20'
    ext.coroutines_version = '1.1.1'
    ext.appcompat_version = "1.1.0"
    ext.material_version = "1.0.0"
    ext.constraintlayout_version = "1.1.3"
    ext.navigation_version = "2.2.0-beta01"
    ext.lifecycle_version = "2.3.0-alpha06"
    ext.viewpager_version = "1.0.0-rc01"

    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/'
            }
        maven { url 'https://maven.aliyun.com/repository/public/'
            }
        maven { url 'https://maven.aliyun.com/repository/google/'
            }
        maven { url 'https://maven.aliyun.com/repository/jcenter/'
            }
        maven { url 'https://maven.aliyun.com/repository/central/'
            }
        maven { url 'https://jitpack.io'
            }
        google()
        jcenter()
//        maven {
//            url 'https://maven.google.com/'
//            name 'Google'
//        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/'
            }
        maven { url 'https://maven.aliyun.com/repository/public/'
            }
        maven { url 'https://maven.aliyun.com/repository/google/'
            }
        maven { url 'https://maven.aliyun.com/repository/jcenter/'
            }
        maven { url 'https://maven.aliyun.com/repository/central/'
            }
        maven { url 'https://jitpack.io'
            }
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
//        maven {
//            url 'https://maven.google.com/'
//            name 'Google'
//        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
